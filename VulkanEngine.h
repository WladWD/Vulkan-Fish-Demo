#include "DrawImage.h"
#pragma once
namespace Engine 
{
	class VulkanEngine {
		////////////////////////////////////////////////////////////////////////////////////////////////////////////
		DrawImage *drawImage;
		////////////////////////////////////////////////////////////////////////////////////////////////////////////
		////////////////////////////////////////////////////////////////////////////////////////////////////////////
		const VulkanEngineApplication::VulkanData * vulkanData;
		////////////////////////////////////////////////////////////////////////////////////////////////////////////
		VkSemaphore imageAvailable, renderFinish;
		////////////////////////////////////////////////////////////////////////////////////////////////////////////
		std::vector<VkCommandBuffer> commandBuffer;
		VkCommandPool commandPool;
		////////////////////////////////////////////////////////////////////////////////////////////////////////////
		void createCommandPool(void);
		void createCommandBuffer(void);
		void createSemaphore(void);
		////////////////////////////////////////////////////////////////////////////////////////////////////////////
		void initializeDraw(void);
		////////////////////////////////////////////////////////////////////////////////////////////////////////////
	public:
		VulkanEngine(const VulkanEngineApplication::VulkanData * vulkanData, JNIEnv *env, jobject rmng);
		~VulkanEngine();
		////////////////////////////////////////////////////////////////////////////////////////////////////////////
		void initialize(void);
		void resize(void);
		////////////////////////////////////////////////////////////////////////////////////////////////////////////
		void pause(void);
		void resume(void);
		////////////////////////////////////////////////////////////////////////////////////////////////////////////
		void draw(void);
		////////////////////////////////////////////////////////////////////////////////////////////////////////////
	};
}

