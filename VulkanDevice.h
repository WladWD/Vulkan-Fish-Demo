#include "InitStruct.h"
#pragma once

namespace VulkanEngineApplication
{
	class VulkanDevice
	{
		/////////////////////////////////////////////////////////////////////////////////////
		std::vector<const char *> deviceValidationLayer;
#ifdef _DEBUG
		const bool enableDeviceValidationLayer = true;
#else
		const bool enableDeviceValidationLayer = true;
#endif
		/////////////////////////////////////////////////////////////////////////////////////
		//Extension 
		std::vector<const char *> deviceExtension = {
			VK_KHR_SWAPCHAIN_EXTENSION_NAME
		};
		/////////////////////////////////////////////////////////////////////////////////////
		VulkanEngineApplication::VulkanData *vulkanData;
		/////////////////////////////////////////////////////////////////////////////////////
		void selectPhisicalDevice(void);
		VulkanEngineApplication::SwapChainSupportDetails querySwapChainSupport(VkPhysicalDevice mDevice);
		bool isDeviceSuitable(VkPhysicalDevice mDevice, int32_t &mDeviceQueueFamilyIndex);
		int32_t findQueueFamily(VkPhysicalDevice mDevice);
		bool checkDeviceExtensionSupport(VkPhysicalDevice mDevice);
		/////////////////////////////////////////////////////////////////////////////////////
		void createDevice(void);
		/////////////////////////////////////////////////////////////////////////////////////
	public:
		VulkanDevice(const VulkanEngineApplication::VulkanData *vulkanData);
		~VulkanDevice();
		/////////////////////////////////////////////////////////////////////////////////////
		void initialize(void);
		/////////////////////////////////////////////////////////////////////////////////////
	};
}

